#include <iostream>
#include <cstdlib>
#include <conio.h>
#include <stdlib.h>
#include <windows.h>
using namespace std;
struct node{
	double nilai_data;
	node *next;
};
   node *awal= NULL;
   node *posisi;
   int option = 0;
double destiny(double nilai){
	node *baru;
	baru = new node;
	baru->nilai_data = nilai;
	baru->next = NULL;
	if (awal==NULL){
		awal = baru;
		awal->next= NULL;
	}else{
		baru->next= awal;
		awal = baru;
	}
	return 0;
}
void InsertDepan(){
	node *baru;
	baru = new node;
	cout<<"Masukkan datanya : "; cin>>baru->nilai_data;
	baru->next= NULL;
	if (awal==NULL){
		awal = baru;
		awal->next = NULL;
	}else{
		baru->next = awal;
		awal = baru;
	}
	
}
void InsertTengah(){
	node *baru,*bantu;
	int sisipkan;
	if (awal != NULL){
		cout<<"Data ini akan disisipkan setelah data ke : "; cin>>sisipkan;
		baru = new node;
		bantu = awal;
		
		for ( int i =1;i < sisipkan -1;i++){
			if(bantu->next != NULL)
			bantu = bantu->next;
			else
			break;
			}
			cout<<"Masukkan data : "; cin>>baru->nilai_data;
			baru->next = bantu->next;
			bantu->next = baru;
		}else{
			cout<<"Belum ada datanya mas.... Mohon di isi dulu datanya ";
		}
	}
void InsertBelakang(){
	node *temp,*temp2;
	temp = new node;
	cout<<"Masukkan data : "; cin>>temp->nilai_data;
	temp->next = NULL;
	if (awal == NULL){
		awal = temp;
		posisi = awal;
		}else{
			temp2 = awal;
			while (temp2->next != NULL){
				temp2 = temp2->next;
			}temp2->next = temp;
		}
}
void EraseDepan(){
	node *temp1,*temp2;
	if (awal==NULL)
		cout<<"LIST KOSONG!!"<<endl;
		else{
			temp1 = awal;
			if(temp1->next = NULL){
				delete temp1;
				awal = NULL;
			}else{
				while(temp1->next != NULL){
					temp2 = temp1;
					temp1 = temp1->next;
				}delete temp1;
				temp2->next = NULL;
			}
		}
	
}
void EraseTengah()
{
  node *hapus, *bantu;
  int posisi_hapus,banyakdata,poshapus;
  if(awal != NULL)
  {
    cout<<"Akan dihapus setelah Data Ke ? : ";
    cin>>posisi_hapus;
   banyakdata=1;
    bantu=awal;
    while(bantu->next != NULL)
    {
      bantu=bantu->next;
      banyakdata++;
    }
    if((posisi_hapus<1)||(posisi_hapus>banyakdata))
    {
      cout<<"Belum ada data !";
    }
    else
    {
      bantu=awal;
      poshapus=1;
      while(poshapus<(posisi_hapus-1))
      {
        bantu=bantu->next;
        poshapus++;
      }
      hapus=bantu->next;
      bantu->next=hapus->next;
      delete hapus;
    }
 }
 else 
    cout<<"Data Masih kosong, tidak bisa hapus data dari tengah! ";
 
}
void EraseBelakang(){
	node *temp;
	temp = awal;
	awal = awal->next;
	delete temp;
}
void tampilkan (){
	node *temp;
	temp = awal;
	
	cout<<endl;
	cout<<"Data { ";
	if (temp == NULL)
	cout<<"List Kosong  "<<endl;
	else{
		while (temp != NULL){
			cout<<" "<<temp->nilai_data<<" ,";
				if (temp == posisi)
					cout<<" <<PosisiNode";
				temp=temp->next;
			}
		cout<<" }";
		}
	}
int main(){
	awal=NULL;
	destiny(0.5);
	destiny(1);
	destiny(1.5);
	destiny(2);
	destiny(2.5);
	destiny(3);
	option:
	tampilkan ();
	cout<<"  "<<endl;
	cout<<"Menu : "<<endl;
	cout<<"1. Insert Node Depan"<<endl;
	cout<<"2. Insert Node Belakang"<<endl;
	cout<<"3. Insert Node Tengah"<<endl;
	cout<<"4. Erase Node Depan"<<endl;
	cout<<"5. Erase Node Tengah"<<endl;
	cout<<"6. Erase Node Belakang"<<endl;
	cout<<"Masukkan pilihan : ";
	cin>>option;
	switch(option){
		case 1 : InsertDepan();
			break;
		case 2 : InsertBelakang();
			break;
		case 3 : InsertTengah();
			break;
		case 4 : EraseDepan();
			break;
		case 5 : EraseTengah():
			break;
		case 6 : EraseBelakang();
			break;
		default : cout<<"Nothing Happen "<<endl;
	}
		
	
	goto option;
	return 0;
}
